import { FC } from 'react';
import { Metrics } from '../types';

interface MetricsDisplayProps {
  metrics: Metrics;
}

export const MetricsDisplay: FC<MetricsDisplayProps> = ({ metrics }): JSX.Element => {
  const getMetricDescription = (name: string, value: number): string => {
    const percentage = (value * 100).toFixed(0);
    
    switch (name) {
      case 'coherence_score':
        return `Связность текста: ${percentage}% (${value >= 0.7 ? 'хорошая' : 'требует улучшения'})`;
      case 'entropy_score':
        return `Информативность: ${percentage}% (${value >= 0.7 ? 'высокая' : 'средняя'})`;
      case 'burstiness_score':
        return `Динамичность: ${percentage}% (${value >= 0.6 ? 'естественная' : 'монотонная'})`;
      case 'perplexity_score':
        return `Предсказуемость: ${percentage}% (${value >= 0.7 ? 'хорошая' : 'низкая'})`;
      case 'vocab_richness_score':
        return `Богатство словаря: ${percentage}% (${value >= 0.8 ? 'отличное' : 'среднее'})`;
      case 'readability_score':
        return `Читаемость: ${percentage}% (${value >= 0.7 ? 'легко читается' : 'сложный текст'})`;
      case 'dominant_prob_score':
        return `Уникальность: ${percentage}% (${value <= 0.5 ? 'высокая' : 'низкая'})`;
      default:
        return `${name}: ${percentage}%`;
    }
  };

  return (
    <div className="metrics-display bg-gray-50 dark:bg-gray-800 rounded-lg p-3 mt-2 text-sm">
      <div className="mb-2 font-medium text-gray-700 dark:text-gray-300">
        Анализ качества текста:
      </div>
      
      <div className="space-y-1">
        {Object.entries(metrics.scores).map(([key, value]) => (
          <div 
            key={key}
            className="flex items-center gap-2"
          >
            <div className="w-2 h-2 rounded-full" 
                 style={{ 
                   backgroundColor: value >= 0.7 ? '#10B981' : 
                                  value >= 0.5 ? '#F59E0B' : '#EF4444'
                 }} 
            />
            <span className="text-gray-600 dark:text-gray-400">
              {getMetricDescription(key, value)}
            </span>
          </div>
        ))}
      </div>

      <div className="mt-3 pt-2 border-t border-gray-200 dark:border-gray-700">
        <span className="text-gray-600 dark:text-gray-400">
          {metrics.is_ai_generated 
            ? "⚠️ Текст похож на сгенерированный ИИ" 
            : "✅ Текст похож на написанный человеком"}
        </span>
      </div>
    </div>
  );
} 